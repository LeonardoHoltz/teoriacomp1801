//zera A
operation clear(A) {
	1: if zero A then goto 0 else goto 2
	2: do dec A goto 1
}

// A = A+B, não zerando B
operation soma(A,B){
//K = variavel auxiliar para não perder B
	1: do clear(K) goto 2
	2: if zero B then goto 6 else goto 3
	3: do inc A goto 4
	4: do dec B goto 5
	5: do inc K goto 2
	6: if zero K then goto 0 else goto 7
	7: do inc B goto 8
	8: do dec K goto 6
}

// A=B, copia o valor de B para A sem alterar B
operation assign(A,B){
  1: do clear(A) goto 2
  2: do soma(A,B) goto 0
}

// A=A-B, sem alterar B
operation subt(A,B){
	1: do assign (K,B) goto 2
	2: if zero K then goto 0 else goto 3
	3: do dec A goto 4
	4: do dec K goto 2
}
//teste se A>=B
test maiorq(A,B){
	a: do assign(K,A) goto b
	b: do assign(L,B) goto 1
	1: if zero A then goto 5 else goto 2
	2: if zero B then goto true else goto 3
	3: do dec A goto 4
	4: do dec B goto 5
	5: if zero B then goto true else goto false
}

//A= A/B, sem alterar B
//A= Resultado, B=divisor, C=dividendo/resto, K= auxiliar para não perder B
operation div(A,B){
	1: do assign (C,A) goto 2
	2: do clear (A) goto 3
	3: do assign (K,B) goto 4
	4: do subt(C,B) goto 5
	5: do inc A goto 6
	6: if zero C then goto 0 else goto 7
	7: if maiorq(C,B) then goto 4 else goto 0
	}

// A:=A div 2 usando C (divisão inteira por 2)
operation div2(A,C){
  1: do assign(C,A) goto 2
  2: do clear(A) goto 3
  3: if zero C then goto 0 else goto 4
  4: do dec C goto 5
  5: if zero C then goto 0 else goto 6
  6: do dec C goto 7
  7: do inc A goto 3
}

// A divisivel_por_2 usando C (teste se multiplo de 2)
test divBy2(A,C){
  1: do assign(C,A) goto 2
  2: do clear(A) goto 3
  3: if zero C then goto true else goto 4
  4: do dec C goto 5
  5: do inc A goto 6
  6: if zero C then goto false else goto 7
  7: do inc A goto 8
  8: do dec C goto 3
}

// A:=fst(B) usando C,D (extrai o primeiro componente do par)
operation fst(A,B,C,D){
  1: do clear(A) goto 2
  2: do assign(C,B) goto 3
  3: if divBy2(C,D) then goto 4 else goto 6
  4: do div2(C,D) goto 5
  5: do inc A goto 3
  6: do clear(C) goto 0
}

// A:=A div 3 usando C (divisão inteira por 3)
operation div3(A,C){
  1: do assign(C,A) goto 2
  2: do clear(A) goto 3
  3: if zero C then goto 0 else goto 4
  4: do dec C goto 5
  5: if zero C then goto 0 else goto 6
  6: do dec C goto 7
  7: if zero C then goto 0 else goto 8
  8: do dec C goto 9
  9: do inc A goto 3
}

// A divisivel_por_3 usando C (teste se múltiplo de 3)
test divBy3(A,C){
  1: do assign(C,A) goto 2
  2: if zero C then goto true else goto 3
  3: do dec C goto 4
  4: do inc A goto 5
  5: if zero C then goto false else goto 6
  6: do inc A goto 7
  7: do dec C goto 8
  8: if zero C then goto false else goto 9
  9: do dec C goto 10
 10: do inc A goto 2
}

// A:=snd(B) usando C,D (extrai o segundo componente do par)
operation snd(A,B,C,D){
  1: do clear(A) goto 2
  2: do assign(C,B) goto 3
  3: if divBy3(C,D) then goto 4 else goto 6
  4: do div3(C,D) goto 5
  5: do inc A goto 3
  6: do clear(C) goto 0
}
//A= A/B, sem alterar B, retornando resto
//A= Resultado, B=divisor, C=dividendo/resto, K= auxiliar para não perder B
operation rdiv(A,B,C){
	1: do assign (C,A) goto 2
	2: do clear (A) goto 3
	3: do assign (K,B) goto 4
	4: do dec C goto 5
	5: do dec K goto 6
	6: if zero C then goto 0 else goto 7
	//if true = fim do "resto da divisão"
	7: if zero K then goto 8 else goto 4
	8: do inc A goto 3
}

main{
	1: do fst(A,X,C,D) goto 2
	2: do snd(B,X,C,D) goto 3
	3: if zero B then goto 6 else goto 4
	4: do rdiv(A,B,C) goto 5
	5: do assign(Y,C) goto 0
	6: do clear(Y) goto 0
}

